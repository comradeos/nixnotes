
Трассировка системных вызовов ------------------------------------------

strace - это мощная команда в Linux, которая позволяет отслеживать системные вызовы и сигналы, которые происходят в программе. Это очень полезно для отладки и исследования, как программа взаимодействует с операционной системой.

strace ls
Это выведет список всех системных вызовов, которые были сделаны в процессе выполнения команды ls.

strace -o output.txt ls
Это запишет вывод strace в файл output.txt.

tty: Эта команда в Linux выводит имя файла терминала, подключенного к стандартному вводу (консоли, с которой вы взаимодействуете). Это может быть полезно, когда вы хотите узнать, какой терминал используется в данный момент.

pts в /dev/pts/0 обозначает "pseudo terminal slave".

users: Команда users в Linux выводит список имен пользователей, которые в настоящее время вошли в систему. Она не предоставляет дополнительной информации, такой как время входа в систему или используемый терминал.

who: Команда who в Linux выводит информацию о пользователях, которые в настоящее время вошли в систему. Она предоставляет больше информации, чем команда users, включая имя пользователя, терминал, с которого был выполнен вход, дату и время входа в систему и др.

w: Команда w в Linux выводит информацию о пользователях, которые в настоящее время вошли в систему, а также их активность. Она предоставляет такую информацию, как текущий процесс каждого пользователя, время, в течение которого пользователь был активен, время входа в систему и др.

В контексте операционных систем, термин "демон" происходит от "Disk And Execution MONitor". Демоны - это фоновые процессы, которые обычно запускаются при загрузке системы и продолжают работать, пока система не выключится.


which и type - это команды в Unix и Unix-подобных системах, которые используются для определения местоположения исполняемых файлов в переменной окружения PATH.

which: Эта команда возвращает полный путь к исполняемому файлу, который будет использован при вызове данной команды в текущем окружении. Например, если вы введете which ls, вы увидите полный путь к команде ls, которая будет выполнена, если вы введете ls.
$ which ls
/bin/ls

type: Эта команда слегка отличается от which. Она не только ищет исполняемые файлы, но и может определить, является ли команда встроенной командой оболочки, алиасом или функцией. Если вы введете type ls, вы увидите, что ls является исполняемым файлом (если это так), а также узнаете, является ли ls встроенной командой, алиасом или функцией.
$ type ls
ls is aliased to `ls --color=auto'

пользователи и группы ------------------------------------------

pinky, finger, и chfn - это команды Unix и Unix-подобных систем, которые используются для работы с информацией о пользователях.

pinky - это более легкая и упрощенная версия команды finger. Она выводит информацию о пользователях системы, которые в данный момент вошли в систему.

finger - это команда, которая выводит информацию о пользователях системы. Это может включать в себя детали, такие как имя пользователя, время последнего входа в систему, и так далее.

chfn (change finger) - это команда, которая позволяет изменить информацию о пользователе, которую выводит команда finger. Это может включать в себя детали, такие как офис пользователя, номер телефона офиса, и так далее.

Для создания нового пользователя вместе с домашней папкой в Unix-подобных системах, таких как Linux, вы можете использовать команду useradd или adduser (в зависимости от вашего дистрибутива).

Вот пример использования команды useradd:

sudo useradd -m username

После создания пользователя, вы, вероятно, захотите установить пароль для этого пользователя. Это можно сделать с помощью команды passwd:

sudo passwd username

sudo chsh -s /bin/bash username

Если вы уже выполнили команду sudo chsh -s /bin/bash username, но при входе в систему новый пользователь все равно не использует оболочку /bin/bash, возможно, есть несколько причин:

Пользователь все еще находится в текущей сессии. После изменения оболочки командной строки, пользователю нужно выйти из системы и снова войти, чтобы изменения вступили в силу.

Возможно, оболочка /bin/bash не указана в файле /etc/shells. Этот файл содержит список допустимых оболочек для пользователей. Вы можете проверить его содержимое с помощью команды cat /etc/shells.

Возможно, есть проблема с правами доступа к оболочке /bin/bash. Вы можете проверить права доступа к этому файлу с помощью команды ls -l /bin/bash.

Возможно, в файле /etc/passwd указана другая оболочка для этого пользователя. Этот файл содержит информацию о каждом пользователе системы, включая используемую оболочку. Вы можете проверить его с помощью команды grep username /etc/passwd, заменив username на имя пользователя.



В Unix-подобных системах, таких как Linux, файлы /etc/passwd, /etc/shadow, /etc/group и /etc/gshadow играют важную роль в управлении пользователями и группами.

/etc/passwd: Этот файл содержит информацию о каждом пользователе системы. Каждая строка соответствует одному пользователю и включает в себя поля, разделенные двоеточием, такие как имя пользователя, зашифрованный пароль (или x, если пароль хранится в /etc/shadow), UID (идентификатор пользователя), GID (идентификатор группы), полное имя пользователя, домашний каталог и оболочка командной строки.

Пример использования: grep username /etc/passwd, где username - это имя пользователя, информацию о котором вы хотите найти.

/etc/shadow: Этот файл содержит зашифрованные пароли пользователей. Это более безопасный альтернатива хранению паролей в /etc/passwd, так как файл /etc/shadow может быть прочитан только суперпользователем (root).

Пример использования: sudo grep username /etc/shadow, где username - это имя пользователя, пароль которого вы хотите найти.

/etc/group: Этот файл содержит информацию о группах. Каждая строка соответствует одной группе и включает в себя поля, разделенные двоеточием, такие как имя группы, зашифрованный пароль группы (или x, если пароль хранится в /etc/gshadow), GID и список имен пользователей, которые являются членами этой группы.

Пример использования: grep groupname /etc/group, где groupname - это имя группы, информацию о которой вы хотите найти.

/etc/gshadow: Этот файл содержит зашифрованные пароли групп и список членов каждой группы. Это аналогично файлу /etc/shadow, но для групп.

Пример использования: sudo grep groupname /etc/gshadow, где groupname - это имя группы, пароль которой вы хотите найти.


Строка finn:x:1001:1001::/home/finn:/bin/bash в файле /etc/passwd представляет информацию о пользователе finn. Вот что означает каждое поле, разделенное двоеточием:

finn: Имя пользователя.
x: Это означает, что зашифрованный пароль пользователя хранится в файле /etc/shadow.
1001: Это идентификатор пользователя (UID). UID - это уникальное число, которое используется для идентификации пользователя в системе.
1001: Это идентификатор группы (GID). GID - это уникальное число, которое используется для идентификации группы, к которой принадлежит пользователь.
: Поле для комментариев, также известное как GECOS. Это может включать в себя полное имя пользователя и другую контактную информацию. В данном случае оно пустое.
/home/finn: Домашний каталог пользователя.
/bin/bash: Оболочка командной строки пользователя. Это программа, которая запускается при входе пользователя в систему.

sudo visudo

# Добавить пользователя в группу sudo
sudo usermod -aG sudo username

# Удалить пользователя из группы sudo
sudo gpasswd -d username sudo

Кроме того, после добавления пользователя в группу sudo, пользователь должен выйти из системы и снова войти


Чтобы принудительно выйти из системы как пользователь в Unix-подобных системах, таких как Linux, вы можете использовать команду pkill. Вот как вы можете это сделать:

sudo pkill -KILL -u username



---------------------

Для просмотра .bash_history другого пользователя в реальном времени, вам нужно изменить настройки оболочки bash этого пользователя, чтобы команды немедленно записывались в файл .bash_history.

Вы можете добавить следующие строки в файл .bashrc пользователя:
export PROMPT_COMMAND='history -a'
shopt -s histappend

PROMPT_COMMAND='history -a' говорит bash записывать команды в файл .bash_history сразу после их выполнения, а shopt -s histappend говорит bash добавлять команды в конец файла .bash_history, а не перезаписывать его.

---------------------
